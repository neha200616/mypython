# -*- coding: utf-8 -*-
"""Day-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17dODDRddFVua9-OG4pcsfKTCK1_QT3KU
"""

def show():
  print("Hello,Python!")
show()

#LCM
import math

def lcm(a, b):
    return abs(a * b)

def sum():
   a=int(input("a"))
   b=int(input("b"))
   sum=a+b
   print(sum)

sum()

#factorial
def fact():
 num =int(input("enter the number"))
 fact=1
 for i in range(1,num+1):
  fact=fact*i
 print(fact)
fact()

#prime numbers
def isprime():
 num=int(input("enter the number"))
 if num<2:
    print("not prime not composite")
 for i in range(2,int(num**0.5)+1):
  if num%i==0:
    print("number is prime")
  else:
    print("number is not prime")
isprime()

#fibonacci series
from typing import List
def fibo(n):
 sequence=[]
 a ,b=0,1
 for i in range(n):
   sequence.append(a)
   a,b=b,a+b
 return sequence
n = int(input("Enter the number of terms: "))
c = fibo(n)
print(c)

def display():
 a=int(input("enter the number"))
 b=int(input("enter the number"))
 c=int(input("enter the number"))
 if a>b and a>c:
  print("a is greater")
 elif b>c and b>a:
  print("b is greater")
 else:
  print("c is greater")
display()

#palindrome
def palindrome():
 a = input("enter the number=")
 if a == a[::-1]:
  print("it is the palindrome")
 else:
  print("it is not a palindrome")
palindrome()

#armstrong number
def armstrong():
 a=int(input("enter the number"))
 sum=0
 temp= a
 while temp>0:
  sum = sum +((temp%10)**3)
  temp=temp//10
  if a==sum:
   print("enter the number is armstrong")
   break
 else:
  print("enter the number is not armstrong")
armstrong()

#power funtion
def power():
  a=int(input("enter the number"))
  b=int(input("enter the number"))
  print(a**b)
power()

#simple calculator
def calculator():
  a=(input("enter the number"))
  b=(input("enter the number"))
  operator=input("enter the operator")
  if operator=="+":
    print("Addition operator")
  elif operator=="-":
    print("subtraction operator")
  elif operator=="*":
    print("multiplication operator")
  elif operator=="/":
   print("division operator")
calculator()

#string reverse
def reverse():
  a=input("enter the string")
  print(a[::-1])
reverse()

#sum of digits
def sum():
 a=input("enter the number")
 b=input("enter the number")
 total= a+b
 print("sum of number:",total)


sum()

#default argument
def greef(name="reena"):
    print("hello", name)

greef()
greef("alice")

#keyword arguments
def ct(colour,name):
 print(f"the person {colour},is {name}")
ct(name="reena",colour="red")

#math module
import math
print(math.sqrt(25))
print(math.factorial(5))

# using the random module
import random
print(random.randint(1,100))
print(random.choice([1,2,3,4,5]))

#GCD of numbers
import math

num1 = 36
num2 = 60

gcd = math.gcd(num1, num2)

print(f"The GCD of {num1} and {num2} is {gcd}")

#lamda funtion for squaring
square = lambda x: x** 2
print(square(5))

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

num1 = int(input("Enter the first number: "))
num2 = int(input("Enter the second number: "))


result = gcd(num1, num2)
print(f"The GCD of {num1} and {num2} is {result}")

#lamda function for sorting
points = [(2,3),(1,5),(4,7)]
points.sort(key=lambda p: p[1])
print(points)