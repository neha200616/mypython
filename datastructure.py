# -*- coding: utf-8 -*-
"""datastructure.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oEujyXh288x5raWCJBJXeK2CQgvZi3WO

LIST
"""

Neha=[1,2,3,4]
Neha
Neha[0]

reena=["apple","ball","cat"]
reena
reena[0]="rajesh"
reena

raj=["apple","ball","cat"]
raj
raj.append("dog")
raj

raje=["apple","ball","cat"]
raje
raje.insert(1,"dog")
raje

ram=["apple","ball","cat"]
ram
ram.remove("apple")
ram

priya=["apple","ball","cat"]
priya
priya.pop(1)
priya
len(priya)

seeena=["apple","ball","cat"]
seeena
del seeena[0]
seeena

sam = [1,2,5,7,4]
sam.sort()
print(sam)

say=[1,2,5,7,4]
say.reverse()
print(say)

#sum of list element
a={1,2,3,4}
print(sum(a))

c={300,400,500,560}
min_num=min(c)
max_num=max(c)
print(min_num)
print(max_num)

#count occurrences
rey=("apple","ball","cat","apple")
rey.count("apple")

#merging lists
a=[1,2,3,4]
b=[5,6,7,8]
c=a+b
print(c)

"""Tuple"""

#tuple creation and access
a=(1,2,3,4)
a[0]

#tuple unpacking
a=(1,2,3,4)
a1,a2,a3,a4=a
print(a1)
print(a2)
print(a3)
print(a4)

#convert tuple to list and vice versa
c=(2,4,5,6)
c=list(c)
print(c)

r=[3,5,4,6,8]
r=tuple(r)
print(r)

#tuple concatination
a=(1,2,3,4)
b=(5,6,7,8)
c=a+b
print(c)

Dictionary

#dictionary
a={1:"apple",2:"ball",3:"cat"}
a

#accessing diction values
a={1:"apple",2:"ball",3:"cat"}
a[1]

#adding and updating dictionary elem
a={1:"apple",2:"ball",3:"cat"}
a[4]="dog"
a

#removing elements from a dictionary
a={1:"apple",2:"ball",3:"cat"}
a.pop(1)
a

#iteration thhrough a dictionary
a={1:"apple",2:"ball",3:"cat"}
for x,y in a.items():
  print(x,y)

#mearging dictionaries
dict1 = {'a': 1, 'b': 2, 'c': 3}
dict2 = {'d': 4, 'e': 5}

dict1.update(dict2)

print("Merged Dictionary:", dict1)

set = {1, 2, 3, 4, 5}

element = 3

set = {1, 2, 3, 4, 5}

element = 3

if   check_element_in_set(set, element):
    if element in set:
        print(f"The element {element} exists in the set.")
    else:
        print(f"The element {element} does not exist in the set.")

#Find Common Elements in Two Sets
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

common_elements = set1 & set2
print(common_elements)

#List Comprehension:
squares = []
for x in range(10):
    squares.append(x**2)
print(squares)

#dictionary comperehention
squares = {x: x**2 for x in range(10)}
print(squares)

#Set Comprehension
even_squares = {x**2 for x in range(1, 11) if x % 2 == 0}
print(even_squares)

#Nested Data Structures
nested_dict = {
    "name": "John",
    "address": {
        "street": "123 Main St",
        "city": "New York",
        "zip": 10001
    },
    "contacts": {
        "email": "john.doe@example.com",
        "phone": 555-1234
    }
}

